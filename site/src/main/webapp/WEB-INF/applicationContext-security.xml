<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:lang="http://www.springframework.org/schema/lang"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                           http://www.springframework.org/schema/lang http://www.springframework.org/schema/beans/spring-lang-4.1.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">


  <!-- Static Resources -->
  <http pattern="/css/**" security="none"/>
  <http pattern="/images/**" security="none"/>
  <http pattern="/script/**" security="none"/>
  <http pattern="/webfiles/**" security="none"/>
  <http pattern="/autoreload/**" security="none"/>
  <http pattern="/ping/" security="none"/>

  <!-- Channel Manager requests may bypass authentication -->
  <http pattern="/_rp/**" security="none"/>
  <http pattern="/_cmsrest/**" security="none"/>
  <http pattern="/_cmsinternal/**" security="none"/>

  <http auto-config="true" use-expressions="true" disable-url-rewriting="false">

    <!-- temporary disable csrf-->
    <csrf disabled="true"/>
    <!-- Example configuration to allow anonymous access as well as authenticated access. -->
    <intercept-url pattern="/secure*" access="isAnonymous() or hasRole('everybody')"/>
    <intercept-url pattern="/logout*" access="isAnonymous() or hasRole('everybody')"/>

    <!-- Example configuration to allow only authenticated access to users having 'ROLE_everybody'. -->
    <intercept-url pattern="/**" access="hasRole('everybody')"/>

    <!-- login page, which uses custom authentication success handler to be able to redirect to original page -->
    <form-login login-page="/secure" default-target-url="/" always-use-default-target="true" />

    <logout invalidate-session="true" logout-success-url="/secure" logout-url="/logout"/>

  </http>


  <!--
    Authentication Manager configuration with Hippo Repository based Authentication Provider configuration ('hippoAuthenticationProvider').
    However, you can use any other authentication provider(s) if you don't need to authenticate users against Hippo Repository.
  -->
  <authentication-manager >
    <authentication-provider ref="hippoAuthenticationProvider"/>
  </authentication-manager>

  <!--
    Hippo Repository based Authentication Provider. This Authentication Provider provide authentication against Hippo Repository Security Store.
    If you don't need to authenticate users against Hippo Repository, you don't have to include the following bean.
  -->
  <beans:bean id="hippoAuthenticationProvider"
              class="org.onehippo.forge.security.support.springsecurity.authentication.HippoAuthenticationProvider">
    <beans:property name="hippoUserDetailsService" ref="userDetailService"/>
  </beans:bean>

  <beans:bean id="userDetailService"
              class="org.onehippo.demo.security.CustomSessionPoolUserDetailService">
    <beans:property name="defaultRoleName" value="everybody"/>
  </beans:bean>

</beans:beans>